name: 'CIDoer Action'
description: 'A unified Bash scripting framework designed to seamlessly integrate with multiple CI/CD workflows'
author: "Basher"
inputs:
  ref:
    description: 'Git reference (branch, tag, or commit SHA) to download'
    default: 'main'
    required: false
  directory:
    description: 'Destination directory to place the source code'
    default: '.cidoer'
    required: false
outputs: { }
runs:
  using: composite
  steps:
    - id: setup-cidoer
      shell: bash
      env:
        DOWNLOAD_REF: ${{ inputs.ref }}
        DOWNLOAD_DIR: ${{ inputs.directory }}
      run: |
        setup_cidoer() {
          local ref="${1:-main}" dir="${2:-.cidoer}" path
          local archive_url="https://github.com/i3ash/cidoer/archive/$ref.zip"
          printf '%s%s\n' 'Downloading:' "$archive_url"
          curl -fsSL "$archive_url" -o source.zip
          printf '%s%s\n' 'Extracting:' "$(pwd)"
          unzip -q source.zip -d "$(pwd)"
          rm source.zip
          rm -rf "$(pwd)"/"${dir:?}"
          mv "cidoer-$ref" "$dir"
          ls -lhAR "$dir"
          path="$(pwd)"/"$dir"
          source "$path"/cidoer.core.sh
          export CIDOER_DIR="$path"
          export CIDOER_CORE_FILE="$path/cidoer.core.sh"
          do_print_section FINISHED
          uname -a || print 'uname error'
          do_print_dash_pair 'CIDOER_OS_TYPE' "$(do_os_type)"
        }
        setup_cidoer "${DOWNLOAD_REF:-}" "${DOWNLOAD_DIR:-}"
        if [ -n "${GITHUB_ENV:-}" ]; then
          printf '%s\n' "CIDOER_DIR=$CIDOER_DIR" >>"$GITHUB_ENV"
          printf '%s\n' "CIDOER_CORE_FILE=$CIDOER_CORE_FILE" >>"$GITHUB_ENV"
        fi
